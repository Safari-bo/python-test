#set cluster_name = $getVar('name', '')
#set ntp_server = $getVar('ntp_server', '')
#set partition = $getVar('partition', {})
#set default_gateway = $getVar('gateway', '')
#set dns = $getVar('nameservers', ['8.8.8.8'])[0]
#set network_cfg = $getVar('network_cfg', {})
#set server_credentials = $getVar('server_credentials', {})
#set console_credentials = $getVar('console_credentials', {})
#set component_settings = $getVar('component_settings', {})
#set component_setting = $component_settings
#set ironic_settings = $getVar('ironic_settings', {})
#set octavia_settings = $getVar('octavia_settings', {})
#set package_host_mapping = $getVar('package_host_mapping', {})
#set ip_settings_detail = $getVar('ip_settings', {})

#set neutron_config = $getVar('neutron_config', {})

#set enable_ironic = $getVar('enable_ironic', '')
#set enable_ironicmon = $getVar('enable_ironicmon', '')
#set enable_manila = $getVar('enable_manila', '')
#set enable_magnum = $getVar('enable_magnum', '')

#set $sys_intf_mappings = {}
#for $intf_info in $network_cfg.sys_intf_mappings
#set $sys_intf_mappings[$intf_info['name']] = $intf_info['interface']
#end for

#set $bridge_mappings = {}
#for $mapping_info in $network_cfg.bridge_mappings
#set $bridge_mappings[$mapping_info['name']] = $mapping_info['interface']
#end for

#set $sys_device_mappings = {}
#for $intf_info in $network_cfg.sys_intf_mappings
#if $intf_info['interface'] in $bridge_mappings
#set $sys_device_mappings[$intf_info['name']] = $bridge_mappings[$intf_info['interface']]
#else
#set $sys_device_mappings[$intf_info['name']] = $intf_info['interface']
#end if
#end for

#set ironic_device_interface = 'eth0'
#for $intf_info in $network_cfg.sys_intf_mappings
#if $intf_info['name'] == 'ironic'
#set $ironic_device_interface = $intf_info['interface']
#end if
#end for

#set internal_vip = $network_cfg.internal_vip
#set public_vip = $network_cfg.public_vip
#set bond_mappings = $network_cfg.bond_mappings

#set neutron_ovs_config = $neutron_config.openvswitch

#set net_cidr = {}
#set ip_settings = $network_cfg.nic_mappings
#for net in $ip_settings
#set net_cidr[$net['name']] = $net['cidr']
#end for

#set octavia_ip_settings = {}
#set ironic_ip_settings = {}
#set ip_settings = $network_cfg.nic_mappings
#for net in $ip_settings
#if $net['name'] == 'octavia'
#set octavia_ip_settings = $net
#else if $net['name'] == 'ironic'
#set ironic_ip_settings = $net
#else if $net['name'] == 'magnum'
#set magnum_ip_settings = $net
#else if $net['name'] == 'ironic-monitor'
#set ironic_monitor_ip_settings = $net
#end if
#end for

#set tenant_network_type = $neutron_config.openvswitch.tenant_network_type
#set internal_vip = $network_cfg.internal_vip
#set internal_vip_interface = $internal_vip['interface']
#set public_vip = $network_cfg.public_vip
#set public_vip_interface = $public_vip['interface']

#set controller = $package_host_mapping['nova']
#set internal_ntp_server = $package_host_mapping['ntp_server']
#set computer = $package_host_mapping['computer']
#set ha = $package_host_mapping['haproxy']
#set datapool = $package_host_mapping['mariadb']
#set network = $package_host_mapping['neutron']
#set ceph_mon = $package_host_mapping['ceph_mon']
#set ceph_osd = $package_host_mapping['ceph_osd']
#set ceph_admin = $package_host_mapping['ceph_admin']
#set all = $package_host_mapping['all']
#set rsyslog = $package_host_mapping['rsyslog']
#set ironic = $package_host_mapping['ironic']
#set zabbix_server = $package_host_mapping['zabbix_server']

#if $component_settings.use_https.value == 'true'
#set $web_protocol = 'https'
#else
#set $web_protocol = 'http'
#end if
#*

*#
#set $etcd_ip_range = {'mgnt': [], 'storage': [], 'service': []}
#for $host, $config in $ip_settings_detail.items()
#for $sub_net_config in $config
#if $sub_net_config['name'] == 'mgnt'
$etcd_ip_range['mgnt'].append($sub_net_config['ip'])
#elif $sub_net_config['name'] == 'ceph-public'
$etcd_ip_range['storage'].append($sub_net_config['ip'])
#elif $sub_net_config['name'] == 'service'
$etcd_ip_range['service'].append($sub_net_config['ip'])
#else
#pass
#end if
#end for
#end for
[DEFAULT]
ipmi_user=$component_setting.ipmi_user.value
ipmi_password=$component_setting.ipmi_password.value
component=$component_setting
protocol=$web_protocol
test=$getVar("test1", {})

;network info: brmgnt-->mgnt_nic, brex-->external_nic, brservice-->service_nic
mgnt_bridge=$sys_intf_mappings['mgnt']
external_bridge=$sys_intf_mappings['external']
service_bridge=$sys_intf_mappings['service']
ironic_nic=$ironic_device_interface
etcd_mgnt=$etcd_ip_range['mgnt'][0]:6000,$etcd_ip_range['mgnt'][1]:6000,$etcd_ip_range['mgnt'][2]:6000
etcd_storage=$etcd_ip_range['storage'][0]
etcd_service=$etcd_ip_range['service'][0]